@echo off
chcp 65001 >nul
echo ========================================
echo    DASHBOARD KE5Z - INICIAR RAPIDO
echo ========================================
echo.
echo Iniciando Dashboard KE5Z...
echo Inclui: Dashboard Principal + IUD (IA) + Analise Waterfall
echo.

REM Verificar se Python est√° instalado
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python n√£o encontrado!
    echo üí° Solu√ß√µes:
    echo    1. Instale Python 3.8+ de https://python.org
    echo    2. Marque "Add Python to PATH" durante a instala√ß√£o
    echo    3. Reinicie o terminal ap√≥s instalar
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Python encontrado
python --version

REM Verificar se o ambiente virtual existe
if not exist "venv\Scripts\activate.bat" (
    echo Ambiente virtual n√£o encontrado!
    echo Criando ambiente virtual...
    
    REM Tentar remover pasta venv existente se houver problemas
    if exist "venv" (
        echo Removendo pasta venv existente...
        rmdir /s /q venv
    )
    
    REM Criar ambiente virtual
    python -m venv venv
    if errorlevel 1 (
        echo ‚ùå Erro ao criar ambiente virtual!
        echo üí° Solu√ß√µes poss√≠veis:
        echo    1. Execute como Administrador
        echo    2. Feche outros programas que possam estar usando a pasta
        echo    3. Mova o projeto para uma pasta com permiss√µes completas
        echo    4. Use o Python global: python -m pip install -r requirements.txt
        echo.
        echo üîÑ Tentando usar Python global...
        goto :use_global_python
    )
    echo ‚úÖ Ambiente virtual criado com sucesso!
) else (
    echo ‚úÖ Ambiente virtual encontrado
)

REM Ativar ambiente virtual
echo Ativando ambiente virtual...
call venv\Scripts\activate.bat
if errorlevel 1 (
    echo ‚ùå Erro ao ativar ambiente virtual!
    echo üîÑ Tentando usar Python global...
    goto :use_global_python
)
echo ‚úÖ Ambiente virtual ativado

REM Atualizar pip primeiro
echo Atualizando pip...
python -m pip install --upgrade pip --quiet

REM Instalar/atualizar depend√™ncias do requirements.txt
echo Instalando depend√™ncias do requirements.txt...
if exist "requirements.txt" (
    python -m pip install -r requirements.txt --quiet
    if errorlevel 1 (
        echo ‚ö†Ô∏è Erro ao instalar do requirements.txt, tentando instala√ß√£o manual...
        python -m pip install --upgrade streamlit pandas plotly altair openpyxl pyarrow numpy requests certifi truststore python-dotenv streamlit-authenticator
    )
) else (
    echo ‚ö†Ô∏è requirements.txt n√£o encontrado, instalando depend√™ncias manualmente...
    python -m pip install --upgrade streamlit pandas plotly altair openpyxl pyarrow numpy requests certifi truststore python-dotenv streamlit-authenticator
)

REM Verificar se as depend√™ncias est√£o funcionando
echo Verificando depend√™ncias...
python -c "import streamlit, pandas, plotly, altair, openpyxl, pyarrow, numpy, requests; print('‚úÖ Todas as depend√™ncias OK!')" 2>nul
if errorlevel 1 (
    echo ‚ö†Ô∏è Erro na verifica√ß√£o de depend√™ncias!
    echo üîÑ Tentando reinstalar...
    python -m pip install --force-reinstall streamlit pandas plotly altair openpyxl pyarrow numpy requests --quiet
)

REM Criar pastas necess√°rias se n√£o existirem
if not exist "KE5Z" mkdir KE5Z
if not exist "KSBB" mkdir KSBB
if not exist "downloads" mkdir downloads
if not exist "logs" mkdir logs

REM Verificar se o arquivo de dados existe
if not exist "KE5Z\KE5Z.parquet" (
    echo Arquivo de dados n√£o encontrado!
    echo Executando extra√ß√£o de dados...
    python Extra√ß√£o.py
    if errorlevel 1 (
        echo ‚ùå Erro na extra√ß√£o de dados!
        echo üí° Verifique se os arquivos de dados est√£o na pasta correta
        pause
        exit /b 1
    )
    echo ‚úÖ Dados extra√≠dos com sucesso
) else (
    echo ‚úÖ Arquivo de dados encontrado
)

REM Abrir dashboard
echo.
echo üöÄ Abrindo Dashboard KE5Z...
echo üìä URL: http://localhost:8501
echo.
echo üìã P√°ginas dispon√≠veis:
echo    ‚Ä¢ Dashboard Principal (Dash.py)
echo    ‚Ä¢ IUD - Assistente IA (pages/Assistente_IA.py)
echo    ‚Ä¢ An√°lise Waterfall (pages/Waterfall_Analysis.py)
echo    ‚Ä¢ Total Accounts (pages/Total accounts.py)
echo    ‚Ä¢ Outside TC (pages/Outside TC.py)
echo.
echo üí° Dica: Mantenha esta janela aberta
echo ü§ñ Para usar o IUD, configure o token Hugging Face na p√°gina "Configurar IA"
echo.

REM Selecionar porta dispon√≠vel (8501..8510)
set PORT=8501
set MAXPORT=8510
:find_port_main
netstat -ano | findstr /R ":%PORT%" >nul 2>&1
if %errorlevel%==0 (
  echo Porta %PORT% em uso. Tentando pr√≥xima...
  set /A PORT=%PORT%+1
  if %PORT% GTR %MAXPORT% (
    echo ‚ùå Nenhuma porta livre entre 8501 e %MAXPORT%.
    echo üí° Feche outros programas que usam essas portas
    pause
    exit /b 1
  )
  goto find_port_main
)
echo ‚úÖ Usando porta %PORT%
python -m streamlit run Dash.py --server.port %PORT%

pause
goto :end

:use_global_python
echo.
echo ‚ö†Ô∏è  Usando Python global (sem ambiente virtual)
echo üîÑ Instalando depend√™ncias globalmente...

REM Instalar depend√™ncias globalmente
if exist "requirements.txt" (
    python -m pip install --user -r requirements.txt --quiet
    if errorlevel 1 (
        echo ‚ö†Ô∏è Erro ao instalar do requirements.txt, tentando instala√ß√£o manual...
        python -m pip install --user --upgrade streamlit pandas plotly altair openpyxl pyarrow numpy requests certifi truststore python-dotenv streamlit-authenticator
    )
) else (
    python -m pip install --user --upgrade streamlit pandas plotly altair openpyxl pyarrow numpy requests certifi truststore python-dotenv streamlit-authenticator
)

echo ‚úÖ Verificando depend√™ncias...
python -c "import streamlit, pandas, plotly, altair, openpyxl, pyarrow, numpy, requests; print('‚úÖ Todas as depend√™ncias OK!')" 2>nul
if errorlevel 1 (
    echo ‚ùå Erro na verifica√ß√£o de depend√™ncias!
    echo üí° Tente executar como Administrador ou instale manualmente:
    echo    pip install streamlit pandas plotly altair openpyxl pyarrow numpy requests
    pause
    exit /b 1
)

REM Criar pastas necess√°rias se n√£o existirem
if not exist "KE5Z" mkdir KE5Z
if not exist "KSBB" mkdir KSBB
if not exist "downloads" mkdir downloads
if not exist "logs" mkdir logs

echo.
echo ‚úÖ Abrindo Dashboard KE5Z (Python Global)...
echo üìä URL: http://localhost:8501
echo.
echo üéØ P√°ginas dispon√≠veis:
echo    ‚Ä¢ Dashboard Principal (Dash.py)
echo    ‚Ä¢ IUD - Assistente IA (pages/Assistente_IA.py)
echo    ‚Ä¢ An√°lise Waterfall (pages/Waterfall_Analysis.py)
echo    ‚Ä¢ Total Accounts (pages/Total accounts.py)
echo    ‚Ä¢ Outside TC (pages/Outside TC.py)
echo.
echo üí° Dica: Mantenha esta janela aberta
echo ü§ñ Para usar o IUD, configure o token Hugging Face na p√°gina "Configurar IA"
echo.

REM Selecionar porta dispon√≠vel (8501..8510)
set PORT=8501
set MAXPORT=8510
:find_port_fallback
netstat -ano | findstr /R ":%PORT%" >nul 2>&1
if %errorlevel%==0 (
  echo Porta %PORT% em uso. Tentando pr√≥xima...
  set /A PORT=%PORT%+1
  if %PORT% GTR %MAXPORT% (
    echo ‚ùå Nenhuma porta livre entre 8501 e %MAXPORT%.
    echo üí° Feche outros programas que usam essas portas
    pause
    exit /b 1
  )
  goto find_port_fallback
)
echo ‚úÖ Usando porta %PORT%
python -m streamlit run Dash.py --server.port %PORT%

:end
pause