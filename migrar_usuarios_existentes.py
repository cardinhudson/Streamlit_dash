#!/usr/bin/env python3
"""
Script para migrar usu√°rios existentes para o novo sistema de aprova√ß√£o
"""
import json
from datetime import datetime

def migrar_usuarios_existentes():
    """Migra usu√°rios existentes para o sistema de aprova√ß√£o"""
    
    print("üîÑ Migrando usu√°rios existentes para o sistema de aprova√ß√£o...")
    print("=" * 60)
    
    try:
        # Carregar usu√°rios existentes
        with open('usuarios.json', 'r', encoding='utf-8') as f:
            usuarios = json.load(f)
        
        print(f"Usu√°rios encontrados: {list(usuarios.keys())}")
        
        # Migrar cada usu√°rio
        usuarios_migrados = 0
        for usuario, dados in usuarios.items():
            if 'status' not in dados:
                if usuario == 'admin':
                    dados['status'] = 'aprovado'
                    print(f"‚úÖ Admin '{usuario}' marcado como APROVADO")
                else:
                    dados['status'] = 'aprovado'  # Usu√°rios existentes s√£o aprovados automaticamente
                    dados['aprovado_em'] = datetime.now().isoformat()
                    print(f"‚úÖ Usu√°rio '{usuario}' marcado como APROVADO (migra√ß√£o)")
                usuarios_migrados += 1
            else:
                print(f"‚ÑπÔ∏è Usu√°rio '{usuario}' j√° tem status: {dados['status']}")
        
        # Salvar usu√°rios migrados
        with open('usuarios.json', 'w', encoding='utf-8') as f:
            json.dump(usuarios, f, ensure_ascii=False, indent=2)
        
        print(f"\nüéâ Migra√ß√£o conclu√≠da!")
        print(f"üìä {usuarios_migrados} usu√°rio(s) migrado(s)")
        
        # Mostrar status final
        print("\nüìã Status final dos usu√°rios:")
        for usuario, dados in usuarios.items():
            status_icon = "‚úÖ" if dados.get('status') == 'aprovado' else "‚è≥"
            status_text = "Aprovado" if dados.get('status') == 'aprovado' else "Pendente"
            admin_text = " (Admin)" if usuario == 'admin' else ""
            
            print(f"{status_icon} {usuario}{admin_text} - {status_text}")
            if dados.get('aprovado_em'):
                print(f"   ‚úÖ Aprovado em: {dados.get('aprovado_em')}")
        
        return True
        
    except FileNotFoundError:
        print("‚ùå Arquivo usuarios.json n√£o encontrado!")
        return False
    except Exception as e:
        print(f"‚ùå Erro na migra√ß√£o: {e}")
        return False

if __name__ == "__main__":
    migrar_usuarios_existentes()
