#!/usr/bin/env python3
"""
Script para diagnosticar erros no dashboard
"""
import sys
import traceback
import os

def diagnosticar_erros():
    """Diagnostica poss√≠veis erros no sistema"""
    
    print("üîç Diagnosticando erros no dashboard...")
    print("=" * 50)
    
    # Teste 1: Importa√ß√µes b√°sicas
    print("\n1Ô∏è‚É£ Testando importa√ß√µes b√°sicas...")
    try:
        import streamlit as st
        import pandas as pd
        import altair as alt
        print("‚úÖ Importa√ß√µes b√°sicas OK")
    except Exception as e:
        print(f"‚ùå Erro nas importa√ß√µes: {e}")
        return False
    
    # Teste 2: M√≥dulo de autentica√ß√£o
    print("\n2Ô∏è‚É£ Testando m√≥dulo de autentica√ß√£o...")
    try:
        from auth import verificar_autenticacao, exibir_header_usuario
        print("‚úÖ M√≥dulo de autentica√ß√£o OK")
    except Exception as e:
        print(f"‚ùå Erro no m√≥dulo de autentica√ß√£o: {e}")
        traceback.print_exc()
        return False
    
    # Teste 3: Arquivo parquet
    print("\n3Ô∏è‚É£ Testando arquivo de dados...")
    try:
        df = pd.read_parquet('KE5Z/KE5Z.parquet')
        print(f"‚úÖ Arquivo parquet OK - Shape: {df.shape}")
    except Exception as e:
        print(f"‚ùå Erro no arquivo parquet: {e}")
        return False
    
    # Teste 4: Execu√ß√£o do dashboard
    print("\n4Ô∏è‚É£ Testando execu√ß√£o do dashboard...")
    try:
        # Simular execu√ß√£o do dashboard
        exec(open('Dash.py').read())
        print("‚úÖ Dashboard executa sem erros")
    except Exception as e:
        print(f"‚ùå Erro na execu√ß√£o do dashboard: {e}")
        traceback.print_exc()
        return False
    
    # Teste 5: P√°ginas protegidas
    print("\n5Ô∏è‚É£ Testando p√°ginas protegidas...")
    paginas = ['pages/Outside TC.py', 'pages/Total accounts.py']
    for pagina in paginas:
        try:
            if os.path.exists(pagina):
                exec(open(pagina).read())
                print(f"‚úÖ {pagina} OK")
            else:
                print(f"‚ö†Ô∏è {pagina} n√£o encontrada")
        except Exception as e:
            print(f"‚ùå Erro em {pagina}: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ Diagn√≥stico conclu√≠do!")
    print("‚úÖ Sistema funcionando corretamente")
    
    return True

if __name__ == "__main__":
    diagnosticar_erros()
